import type { GraphQLResolveInfo } from "graphql";
import { AggregateRevokedRefreshTokenArgs } from "./args/AggregateRevokedRefreshTokenArgs";
import { CreateManyRevokedRefreshTokenArgs } from "./args/CreateManyRevokedRefreshTokenArgs";
import { CreateOneRevokedRefreshTokenArgs } from "./args/CreateOneRevokedRefreshTokenArgs";
import { DeleteManyRevokedRefreshTokenArgs } from "./args/DeleteManyRevokedRefreshTokenArgs";
import { DeleteOneRevokedRefreshTokenArgs } from "./args/DeleteOneRevokedRefreshTokenArgs";
import { FindFirstRevokedRefreshTokenArgs } from "./args/FindFirstRevokedRefreshTokenArgs";
import { FindFirstRevokedRefreshTokenOrThrowArgs } from "./args/FindFirstRevokedRefreshTokenOrThrowArgs";
import { FindManyRevokedRefreshTokenArgs } from "./args/FindManyRevokedRefreshTokenArgs";
import { FindUniqueRevokedRefreshTokenArgs } from "./args/FindUniqueRevokedRefreshTokenArgs";
import { FindUniqueRevokedRefreshTokenOrThrowArgs } from "./args/FindUniqueRevokedRefreshTokenOrThrowArgs";
import { GroupByRevokedRefreshTokenArgs } from "./args/GroupByRevokedRefreshTokenArgs";
import { UpdateManyRevokedRefreshTokenArgs } from "./args/UpdateManyRevokedRefreshTokenArgs";
import { UpdateOneRevokedRefreshTokenArgs } from "./args/UpdateOneRevokedRefreshTokenArgs";
import { UpsertOneRevokedRefreshTokenArgs } from "./args/UpsertOneRevokedRefreshTokenArgs";
import { RevokedRefreshToken } from "../../../models/RevokedRefreshToken";
import { AffectedRowsOutput } from "../../outputs/AffectedRowsOutput";
import { AggregateRevokedRefreshToken } from "../../outputs/AggregateRevokedRefreshToken";
import { RevokedRefreshTokenGroupBy } from "../../outputs/RevokedRefreshTokenGroupBy";
export declare class RevokedRefreshTokenCrudResolver {
    aggregateRevokedRefreshToken(ctx: any, info: GraphQLResolveInfo, args: AggregateRevokedRefreshTokenArgs): Promise<AggregateRevokedRefreshToken>;
    createManyRevokedRefreshToken(ctx: any, info: GraphQLResolveInfo, args: CreateManyRevokedRefreshTokenArgs): Promise<AffectedRowsOutput>;
    createOneRevokedRefreshToken(ctx: any, info: GraphQLResolveInfo, args: CreateOneRevokedRefreshTokenArgs): Promise<RevokedRefreshToken>;
    deleteManyRevokedRefreshToken(ctx: any, info: GraphQLResolveInfo, args: DeleteManyRevokedRefreshTokenArgs): Promise<AffectedRowsOutput>;
    deleteOneRevokedRefreshToken(ctx: any, info: GraphQLResolveInfo, args: DeleteOneRevokedRefreshTokenArgs): Promise<RevokedRefreshToken | null>;
    findFirstRevokedRefreshToken(ctx: any, info: GraphQLResolveInfo, args: FindFirstRevokedRefreshTokenArgs): Promise<RevokedRefreshToken | null>;
    findFirstRevokedRefreshTokenOrThrow(ctx: any, info: GraphQLResolveInfo, args: FindFirstRevokedRefreshTokenOrThrowArgs): Promise<RevokedRefreshToken | null>;
    revokedRefreshTokens(ctx: any, info: GraphQLResolveInfo, args: FindManyRevokedRefreshTokenArgs): Promise<RevokedRefreshToken[]>;
    revokedRefreshToken(ctx: any, info: GraphQLResolveInfo, args: FindUniqueRevokedRefreshTokenArgs): Promise<RevokedRefreshToken | null>;
    getRevokedRefreshToken(ctx: any, info: GraphQLResolveInfo, args: FindUniqueRevokedRefreshTokenOrThrowArgs): Promise<RevokedRefreshToken | null>;
    groupByRevokedRefreshToken(ctx: any, info: GraphQLResolveInfo, args: GroupByRevokedRefreshTokenArgs): Promise<RevokedRefreshTokenGroupBy[]>;
    updateManyRevokedRefreshToken(ctx: any, info: GraphQLResolveInfo, args: UpdateManyRevokedRefreshTokenArgs): Promise<AffectedRowsOutput>;
    updateOneRevokedRefreshToken(ctx: any, info: GraphQLResolveInfo, args: UpdateOneRevokedRefreshTokenArgs): Promise<RevokedRefreshToken | null>;
    upsertOneRevokedRefreshToken(ctx: any, info: GraphQLResolveInfo, args: UpsertOneRevokedRefreshTokenArgs): Promise<RevokedRefreshToken>;
}
